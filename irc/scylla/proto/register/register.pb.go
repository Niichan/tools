// Code generated by protoc-gen-go.
// source: register.proto
// DO NOT EDIT!

/*
Package register is a generated protocol buffer package.

It is generated from these files:
	register.proto

It has these top-level messages:
	Register
	Controller
	Mechanism
*/
package register

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Register_Kind int32

const (
	Register_Mechanism  Register_Kind = 1
	Register_Policy     Register_Kind = 2
	Register_Configurer Register_Kind = 3
	Register_Linker     Register_Kind = 4
)

var Register_Kind_name = map[int32]string{
	1: "Mechanism",
	2: "Policy",
	3: "Configurer",
	4: "Linker",
}
var Register_Kind_value = map[string]int32{
	"Mechanism":  1,
	"Policy":     2,
	"Configurer": 3,
	"Linker":     4,
}

func (x Register_Kind) Enum() *Register_Kind {
	p := new(Register_Kind)
	*p = x
	return p
}
func (x Register_Kind) String() string {
	return proto.EnumName(Register_Kind_name, int32(x))
}
func (x *Register_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Register_Kind_value, data, "Register_Kind")
	if err != nil {
		return err
	}
	*x = Register_Kind(value)
	return nil
}

type Controller_Level int32

const (
	Controller_User     Controller_Level = 1
	Controller_Extra    Controller_Level = 2
	Controller_RFC      Controller_Level = 3
	Controller_Fallback Controller_Level = 4
)

var Controller_Level_name = map[int32]string{
	1: "User",
	2: "Extra",
	3: "RFC",
	4: "Fallback",
}
var Controller_Level_value = map[string]int32{
	"User":     1,
	"Extra":    2,
	"RFC":      3,
	"Fallback": 4,
}

func (x Controller_Level) Enum() *Controller_Level {
	p := new(Controller_Level)
	*p = x
	return p
}
func (x Controller_Level) String() string {
	return proto.EnumName(Controller_Level_name, int32(x))
}
func (x *Controller_Level) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Controller_Level_value, data, "Controller_Level")
	if err != nil {
		return err
	}
	*x = Controller_Level(value)
	return nil
}

// Register message for registering a child process capabilities.
type Register struct {
	Uuid             *string        `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	Kind             *Register_Kind `protobuf:"varint,2,req,name=kind,enum=register.Register_Kind" json:"kind,omitempty"`
	Password         *string        `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Register) Reset()         { *m = Register{} }
func (m *Register) String() string { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()    {}

func (m *Register) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Register) GetKind() Register_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return Register_Mechanism
}

func (m *Register) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

// Controller is the declaring message for a policy controller.
type Controller struct {
	Uuid             *string              `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	Socket           *string              `protobuf:"bytes,2,req,name=socket" json:"socket,omitempty"`
	Policies         []*Controller_Policy `protobuf:"bytes,3,rep,name=policies" json:"policies,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Controller) Reset()         { *m = Controller{} }
func (m *Controller) String() string { return proto.CompactTextString(m) }
func (*Controller) ProtoMessage()    {}

func (m *Controller) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Controller) GetSocket() string {
	if m != nil && m.Socket != nil {
		return *m.Socket
	}
	return ""
}

func (m *Controller) GetPolicies() []*Controller_Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type Controller_Policy struct {
	Uuid             *string           `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	Verb             *string           `protobuf:"bytes,2,req,name=verb" json:"verb,omitempty"`
	Level            *Controller_Level `protobuf:"varint,3,req,name=level,enum=register.Controller_Level" json:"level,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Controller_Policy) Reset()         { *m = Controller_Policy{} }
func (m *Controller_Policy) String() string { return proto.CompactTextString(m) }
func (*Controller_Policy) ProtoMessage()    {}

func (m *Controller_Policy) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Controller_Policy) GetVerb() string {
	if m != nil && m.Verb != nil {
		return *m.Verb
	}
	return ""
}

func (m *Controller_Policy) GetLevel() Controller_Level {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Controller_User
}

// Mechanism is a declaring message for a mechanism definition.
type Mechanism struct {
	Uuid             *string `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	Socket           *string `protobuf:"bytes,2,req,name=socket" json:"socket,omitempty"`
	ServerLink       *bool   `protobuf:"varint,3,req,name=serverLink" json:"serverLink,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Mechanism) Reset()         { *m = Mechanism{} }
func (m *Mechanism) String() string { return proto.CompactTextString(m) }
func (*Mechanism) ProtoMessage()    {}

func (m *Mechanism) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Mechanism) GetSocket() string {
	if m != nil && m.Socket != nil {
		return *m.Socket
	}
	return ""
}

func (m *Mechanism) GetServerLink() bool {
	if m != nil && m.ServerLink != nil {
		return *m.ServerLink
	}
	return false
}

func init() {
	proto.RegisterEnum("register.Register_Kind", Register_Kind_name, Register_Kind_value)
	proto.RegisterEnum("register.Controller_Level", Controller_Level_name, Controller_Level_value)
}
